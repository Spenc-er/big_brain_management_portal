import Head from "next/head";
import { initializeApp } from "firebase/app";
import { getFirestore, collection, getDocs, type DocumentSnapshot } from "firebase/firestore";
import { useState, useEffect } from "react";
import * as XLSX from "xlsx"; // Import the xlsx library
import Nav from "../components/navbar";

interface GameData {
  sport_hour: number;
  screen_hour: number;
  game_level: string;
  mood: number;
  game_difficulty: string;
  game_time: string;
  name: string;
  sleep_quality: number;
}

interface UserData {
  age: string;
  education: string;
  email: string;
  gameData: GameData;
  bmi: string;
  gender: string;
}

export default function Home() {
  const firebaseConfig = {
    apiKey: "AIzaSyC9Pzo_um3NJBTR4PX81HG7R9XzGLgZfW8",
    authDomain: "bigbran-62b09.firebaseapp.com",
    projectId: "bigbran-62b09",
    storageBucket: "bigbran-62b09.appspot.com",
    messagingSenderId: "776782980237",
    appId: "1:776782980237:web:40d9cf3009e93326bdaec4"
  };

  // Initialize Firebase
  initializeApp(firebaseConfig);
  const db = getFirestore();

  const [usersDataNumberMemory, setUsersDataNumberMemory] = useState<UserData[]>([]);


  useEffect(() => {

    const loadasync = async () => {

      const querySnapshot = await getDocs(collection(db, "users"));
      const userDataArray: UserData[] = [];

      querySnapshot?.forEach((doc: DocumentSnapshot) => {
        const userData = doc.data() as UserData;
        if (userData.gameData.name === "Number Memory") {
          userDataArray.push(userData);
        }

      });

      setUsersDataNumberMemory(userDataArray);
  

    };
    loadasync().then(() => { return},
      () => {return },);
  }, [db]);

  // Function to export data as Excel
  const exportToExcel = () => {
    const flattenedData = usersDataNumberMemory.map((userData) => {
      const { gameData, ...rest } = userData;
      return { ...rest, ...gameData };
    });
    const worksheet = XLSX.utils.json_to_sheet(flattenedData);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, "UserData");
    XLSX.writeFile(workbook, "number_memory_data.xlsx");
  };

  return (
    <>
      <Head>
        <title>BigBrain</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-gradient-to-b from-[#2e026d] to-[#15162c]">
      <Nav/>
        <div className="flex flex-col items-end gap-12 px-4 py-4">
          {/* Move the export button to the top right */}

          <button
            className="flex-row text-5xl font-extrabold tracking-tight sm:text-[3rem] bg-[hsl(280,100%,70%)] hover:bg-gradient-to-br from-purple-500 to-pink-500 text-white font-bold py-2 px-4 shadow-lg shadow-pink-500/50 dark:shadow-lg dark:shadow-pink-800/80  text-center inline-flex items-center disabled:opacity-25 rounded"
            onClick={exportToExcel}
            disabled={usersDataNumberMemory.length < 1}
          >
            <svg className="w-12 h-12 text-white pr-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 18">
              <path stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 1v11m0 0 4-4m-4 4L4 8m11 4v3a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-3" />
            </svg>
            EXPORT
          </button>
        </div>
       
      </main>
    
    </>

  );
}
